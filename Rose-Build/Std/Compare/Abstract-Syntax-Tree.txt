Datatype Definition:
    Visibility   : Export
    Name         : Ordering
    Type Vars    : 
    Constructors : 
    |   Export LT
    |   Export EQ
    |   Export GT
Trait Declaration:
    Visibility  : Export
    Constraints : 
    Name        : Eq
    Type Var    : a
    Methods     : 
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : ==
    |       Constraints : 
    |       |   (Var {varName = "Eq", varLine = 12, varStart = 14, varEnd = 16},Var {varName = "a", varLine = 12, varStart = 17, varEnd = 18})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : ==
    |       Constraints : 
    |       |   (Var {varName = "Eq", varLine = 12, varStart = 14, varEnd = 16},Var {varName = "a", varLine = 12, varStart = 17, varEnd = 18})
    |       Type        : a, a, Boolean
Trait Declaration:
    Visibility  : Export
    Constraints : 
    |   (Var {varName = "Eq", varLine = 18, varStart = 16, varEnd = 18},Var {varName = "a", varLine = 18, varStart = 19, varEnd = 20})
    Name        : Ord
    Type Var    : a
    Methods     : 
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : <
    |       Constraints : 
    |       |   (Var {varName = "Ord", varLine = 18, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 18, varStart = 28, varEnd = 29})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : <=
    |       Constraints : 
    |       |   (Var {varName = "Ord", varLine = 18, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 18, varStart = 28, varEnd = 29})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : >
    |       Constraints : 
    |       |   (Var {varName = "Ord", varLine = 18, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 18, varStart = 28, varEnd = 29})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : >=
    |       Constraints : 
    |       |   (Var {varName = "Ord", varLine = 18, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 18, varStart = 28, varEnd = 29})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : <=>
    |       Constraints : 
    |       |   (Var {varName = "Ord", varLine = 18, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 18, varStart = 28, varEnd = 29})
    |       Type        : a, a, Ordering
Trait Declaration:
    Visibility  : Export
    Constraints : 
    Name        : Logical
    Type Var    : a
    Methods     : 
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : asBool
    |       Constraints : 
    |       |   (Var {varName = "Logical", varLine = 27, varStart = 14, varEnd = 21},Var {varName = "a", varLine = 27, varStart = 22, varEnd = 23})
    |       Type        : a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : &&
    |       Constraints : 
    |       |   (Var {varName = "Logical", varLine = 27, varStart = 14, varEnd = 21},Var {varName = "a", varLine = 27, varStart = 22, varEnd = 23})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : ||
    |       Constraints : 
    |       |   (Var {varName = "Logical", varLine = 27, varStart = 14, varEnd = 21},Var {varName = "a", varLine = 27, varStart = 22, varEnd = 23})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : ^^
    |       Constraints : 
    |       |   (Var {varName = "Logical", varLine = 27, varStart = 14, varEnd = 21},Var {varName = "a", varLine = 27, varStart = 22, varEnd = 23})
    |       Type        : a, a, Boolean
    |   Function Type Declaration:
    |       Visibility  : Export
    |       Purity      : Pure
    |       Name        : not
    |       Constraints : 
    |       |   (Var {varName = "Logical", varLine = 27, varStart = 14, varEnd = 21},Var {varName = "a", varLine = 27, varStart = 22, varEnd = 23})
    |       Type        : a, Boolean
Function Type Declaration:
    Visibility  : Export
    Purity      : Pure
    Name        : min
    Constraints : 
    |   (Var {varName = "Ord", varLine = 37, varStart = 22, varEnd = 25},Var {varName = "a", varLine = 37, varStart = 26, varEnd = 27})
    Type        : a, a, a
Function Definition:
    Name       : min
    Parameters : 
    |   VarVal (Var {varName = "a", varLine = 38, varStart = 5, varEnd = 6})
    |   VarVal (Var {varName = "b", varLine = 38, varStart = 7, varEnd = 8})
    Body       : 
    |   Return: ExprVal: Pattern Match:
    |       Value : ExprVal: Function Call:
    |       Name      : <=>
    |       Arguments : 
    |       |   ExprVal: Function Call:
    |       |       Name      : a
    |       |       Arguments : 
    |       |   ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
    |   
    |       Cases : 
    |       |   (CtorVal (Var {varName = "LT", varLine = 39, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "a", varLine = 39, varStart = 17, varEnd = 18}) []))])
    |       |   (CtorVal (Var {varName = "EQ", varLine = 40, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "a", varLine = 40, varStart = 17, varEnd = 18}) []))])
    |       |   (CtorVal (Var {varName = "GT", varLine = 41, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "b", varLine = 41, varStart = 17, varEnd = 18}) []))])
Function Type Declaration:
    Visibility  : Export
    Purity      : Pure
    Name        : max
    Constraints : 
    |   (Var {varName = "Ord", varLine = 45, varStart = 22, varEnd = 25},Var {varName = "a", varLine = 45, varStart = 26, varEnd = 27})
    Type        : a, a, a
Function Definition:
    Name       : max
    Parameters : 
    |   VarVal (Var {varName = "a", varLine = 46, varStart = 5, varEnd = 6})
    |   VarVal (Var {varName = "b", varLine = 46, varStart = 7, varEnd = 8})
    Body       : 
    |   Return: ExprVal: Pattern Match:
    |       Value : ExprVal: Function Call:
    |       Name      : <=>
    |       Arguments : 
    |       |   ExprVal: Function Call:
    |       |       Name      : a
    |       |       Arguments : 
    |       |   ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
    |   
    |       Cases : 
    |       |   (CtorVal (Var {varName = "LT", varLine = 47, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "b", varLine = 47, varStart = 17, varEnd = 18}) []))])
    |       |   (CtorVal (Var {varName = "EQ", varLine = 48, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "b", varLine = 48, varStart = 17, varEnd = 18}) []))])
    |       |   (CtorVal (Var {varName = "GT", varLine = 49, varStart = 10, varEnd = 12}) [],[Return (ExprVal (FuncCall (Var {varName = "a", varLine = 49, varStart = 17, varEnd = 18}) []))])
Function Type Declaration:
    Visibility  : Export
    Purity      : Pure
    Name        : clamp
    Constraints : 
    |   (Var {varName = "Ord", varLine = 53, varStart = 24, varEnd = 27},Var {varName = "a", varLine = 53, varStart = 28, varEnd = 29})
    Type        : a, a, a, a
Function Definition:
    Name       : clamp
    Parameters : 
    |   VarVal (Var {varName = "mn", varLine = 54, varStart = 7, varEnd = 9})
    |   VarVal (Var {varName = "mx", varLine = 54, varStart = 10, varEnd = 12})
    |   VarVal (Var {varName = "x", varLine = 54, varStart = 13, varEnd = 14})
    Body       : 
    |   Return: ExprVal: Function Call:
    |       Name      : min
    |       Arguments : 
    |       |   VarVal (Var {varName = "mn", varLine = 54, varStart = 22, varEnd = 24})
    |       |   ExprVal: Function Call:
    |       |       Name      : max
    |       |       Arguments : 
    |       |       |   VarVal (Var {varName = "mx", varLine = 54, varStart = 30, varEnd = 32})
    |       |       |   VarVal (Var {varName = "x", varLine = 54, varStart = 33, varEnd = 34})
Trait Defaults:
    Name        : Ord
    Constraints : 
    Method Defs : 
    |   Function Definition:
    |       Name       : <
    |       Parameters : 
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : .
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : not
    |       |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : >=
    |       |       |       Arguments : 
    |   Function Definition:
    |       Name       : <=
    |       Parameters : 
    |       |   VarVal (Var {varName = "a", varLine = 60, varStart = 5, varEnd = 6})
    |       |   VarVal (Var {varName = "b", varLine = 60, varStart = 10, varEnd = 11})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : ||
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : <
    |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : a
    |       |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : b
    |       |       |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : ==
    |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : a
    |       |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : b
    |       |       |       |       Arguments : 
    |   Function Definition:
    |       Name       : >
    |       Parameters : 
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : .
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : not
    |       |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : <=
    |       |       |       Arguments : 
    |   Function Definition:
    |       Name       : >=
    |       Parameters : 
    |       |   VarVal (Var {varName = "a", varLine = 62, varStart = 5, varEnd = 6})
    |       |   VarVal (Var {varName = "b", varLine = 62, varStart = 10, varEnd = 11})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : ||
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : >
    |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : a
    |       |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : b
    |       |       |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : ==
    |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : a
    |       |       |       |       Arguments : 
    |       |       |       |   ExprVal: Function Call:
    |       |       |       |       Name      : b
    |       |       |       |       Arguments : 
Trait Defaults:
    Name        : Logical
    Constraints : 
    Method Defs : 
    |   Function Definition:
    |       Name       : &&
    |       Parameters : 
    |       |   VarVal (Var {varName = "a", varLine = 67, varStart = 5, varEnd = 6})
    |       |   VarVal (Var {varName = "b", varLine = 67, varStart = 10, varEnd = 11})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : &&
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "a", varLine = 67, varStart = 22, varEnd = 23})
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "b", varLine = 67, varStart = 34, varEnd = 35})
    |   Function Definition:
    |       Name       : ||
    |       Parameters : 
    |       |   VarVal (Var {varName = "a", varLine = 68, varStart = 5, varEnd = 6})
    |       |   VarVal (Var {varName = "b", varLine = 68, varStart = 10, varEnd = 11})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : ||
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "a", varLine = 68, varStart = 22, varEnd = 23})
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "b", varLine = 68, varStart = 34, varEnd = 35})
    |   Function Definition:
    |       Name       : ^^
    |       Parameters : 
    |       |   VarVal (Var {varName = "a", varLine = 69, varStart = 5, varEnd = 6})
    |       |   VarVal (Var {varName = "b", varLine = 69, varStart = 10, varEnd = 11})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : ^^
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "a", varLine = 69, varStart = 22, varEnd = 23})
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
    |       |       |       |   VarVal (Var {varName = "b", varLine = 69, varStart = 34, varEnd = 35})
    |   Function Definition:
    |       Name       : not
    |       Parameters : 
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : .
    |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : not
    |       |       |       Arguments : 
    |       |       |   ExprVal: Function Call:
    |       |       |       Name      : asBool
    |       |       |       Arguments : 
Trait Implementation:
    Name        : Logical
    Constraints : 
    Type Name   : Int
    Method Defs : 
    |   Function Definition:
    |       Name       : asBool
    |       Parameters : 
    |       |   IntLit 0
    |       Body       : 
    |       |   Return: Nullary Ctor Call: False
    |   Function Definition:
    |       Name       : asBool
    |       Parameters : 
    |       |   VarVal (Var {varName = "n", varLine = 76, varStart = 12, varEnd = 13})
    |       Body       : 
    |       |   Return: Nullary Ctor Call: True
Trait Implementation:
    Name        : Logical
    Constraints : 
    Type Name   : Boolean
    Method Defs : 
    |   Function Definition:
    |       Name       : asBool
    |       Parameters : 
    |       |   VarVal (Var {varName = "b", varLine = 81, varStart = 12, varEnd = 13})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
    |   Function Definition:
    |       Name       : &&
    |       Parameters : 
    |       |   Nullary Ctor Call: True
    |       |   VarVal (Var {varName = "b", varLine = 82, varStart = 15, varEnd = 16})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
    |   Function Definition:
    |       Name       : &&
    |       Parameters : 
    |       |   Nullary Ctor Call: False
    |       |   VarVal (Var {varName = "b", varLine = 83, varStart = 16, varEnd = 17})
    |       Body       : 
    |       |   Return: Nullary Ctor Call: False
    |   Function Definition:
    |       Name       : ||
    |       Parameters : 
    |       |   Nullary Ctor Call: True
    |       |   VarVal (Var {varName = "b", varLine = 84, varStart = 15, varEnd = 16})
    |       Body       : 
    |       |   Return: Nullary Ctor Call: True
    |   Function Definition:
    |       Name       : ||
    |       Parameters : 
    |       |   Nullary Ctor Call: False
    |       |   VarVal (Var {varName = "b", varLine = 85, varStart = 16, varEnd = 17})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
    |   Function Definition:
    |       Name       : ^^
    |       Parameters : 
    |       |   Nullary Ctor Call: True
    |       |   VarVal (Var {varName = "b", varLine = 86, varStart = 15, varEnd = 16})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : not
    |       |       Arguments : 
    |       |       |   VarVal (Var {varName = "b", varLine = 86, varStart = 24, varEnd = 25})
    |   Function Definition:
    |       Name       : ^^
    |       Parameters : 
    |       |   Nullary Ctor Call: False
    |       |   VarVal (Var {varName = "b", varLine = 87, varStart = 16, varEnd = 17})
    |       Body       : 
    |       |   Return: ExprVal: Function Call:
    |       |       Name      : b
    |       |       Arguments : 
