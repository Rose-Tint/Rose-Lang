

impl <> Alternative Int  {
    <|> n _ {
        return(n;);
    }
    <|> [0] n {
        return(n;);
    }
    vacant  {
        return(0;);
    }
}
impl <> Alternative Bool  {
    <|> a _ {
        return(a;);
    }
    <|> [(False )] a {
        return(a;);
    }
    vacant  {
        return((False ););
    }
}
impl <> Alternative  {
    choose  {
        return((foldl <|>););
    }
}
export trait <> Alternative a {
    pure export choose<([] a  a )>
    pure export <|><(a  a  a )>
    pure export vacant<(a )>
}

