import export Std.IO.Input
import export Std.IO.Output
import export Std.Low.Resource

appendFile p {
    return(((with p) hPutStr););
}
impure export appendFile<(FilePath  String  Void )>
readFile p {
    return(((with p) hGetContents););
}
impure export readFile<(FilePath  String )>
impure export openFile<(FilePath  OpenMode  Handle )>
impl <> Resource FilePath  {
    with [(Path p)] f {
        let pure <(Handle )>hdl = ((openFile p) (ReadWrite ));
        let pure <(b )>res = (f hdl);
        (close hdl);
        returnres;
    }
    close [(Path p)] {
        return((closeFile p););
    }
}
export data OpenMode     = ReadWrite export
    | Read export
    | Append export
    | Write export

export using FilePath  = String 

