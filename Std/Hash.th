module Std.Hash where


export trait Hashable a {
    pure hash => a, Int;
    pure salted => Int, a, Int;
}


export pure combine => Int, Int, Int;
combine a b {
    let mut result <Int> := b;
    result = result + (a << 6);
    result = result + (a >> 2);
    return a ^ result;
}


impl Hashable {
    salted s a := combine s (hash a);
}


impl Hashable Int {
    hash n := n;
}
