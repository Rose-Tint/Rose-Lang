module Std.Low.Memory where


data Pointer a := intern Ptr => Int


#[must_use(malloc)]
impure malloc => Int, Pointer a;
malloc := rose_malloc__;

#[must_use(alloc)]
impure alloc => a, Pointer a;
alloc a {
    let ptr<Pointer a> := Ptr (malloc (memSizeOf a));
    setPtr a ptr;
    return ptr;
}

impure deref => Pointer a, a;
deref [Ptr p] := rose_ptr_deref__ p;

#[allow_unused((*=))]
impure (*=) => Pointer a, a, Void;
[Ptr p] *= a := rose_mem_set__ p a;

impure free => Pointer a, Void;
free [Ptr p] {
    rose_free__ p;
    return Void;
}

impure addressOf => a, Pointer a;
addressOf := rose_addres_of__;

pure nullptr => Pointer a;
nullptr := Ptr 0;
