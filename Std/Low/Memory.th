module Std.Low.Memory where


data Pointer a = intern Ptr<Int>


#[must_use(malloc)]
impure malloc<Int -> Pointer a>;

#[must_use(new)]
impure new<a -> Pointer a>
new a {
    let mut ptr = malloc (memSizeOf a);
    setPtr a ptr;
    return ptr;
}

-- is this pure due depending only on the input?
impure memSizeOf<a -> Int>

impure deref<Pointer a -> a>

#[allow_unused((*=))]
impure (*=)<Pointer a -> a -> Void>

impure free<Pointer a -> Void>

impure addressOf<a -> Pointer a>

pure nullptr => Pointer a;
nullptr = Ptr 0;
