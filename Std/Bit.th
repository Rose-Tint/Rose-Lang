module Std.Bit where


pure (<<) => { Integral n }, n, n, n;
a << b := rose_shiftl__ a b;

pure (&) => { Integral n }, n, n, n;
a & b := rose_and__ a b;

pure (|) => { Integral n }, n, n, n;
a | b := rose_or__ a b;

pure (^) => { Integral n }, n, n, n;
a ^ b := rose_xor__ a b;

pure (>>) => { Integral n }, n, n, n;
a >> b := rose_shiftr__ a b;
